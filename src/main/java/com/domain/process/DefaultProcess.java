package com.domain.process;import com.domain.util.HttpUtil;import com.domain.util.RedisUtil;import com.domain.util.StringUtil;import com.sun.jersey.spi.resource.Singleton;import org.apache.log4j.Logger;import org.springframework.stereotype.Controller;import javax.ws.rs.POST;import javax.ws.rs.Path;import java.util.ArrayList;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * Created by sunxin(hysx8@sina.com) on 2017/6/6. */@Controller@Singleton@Path("web")public class DefaultProcess extends Thread{    private static Logger logger = Logger.getLogger("log");    private final static String ALIYUN_URL_PREFIX = "https://checkapi.aliyun.com/check/checkdomain?callback=jQuery1111046676790810234237_1496729548476&domain=";    private final static String ALIYUN_URL_SUFFIX = "&token=check-web-hichina-com%3Acv4zcy4201wa0fgld78uwf0iqfhcn43g&_=1496729548487";    private final static String DOMAIN_SUFFIX = ".com";    private final static String WANWANG = "http://panda.www.net.cn/cgi-bin/check.cgi?area_domain=";    private final static int DOMAIN_LENGTH = 5;    @POST    @Path("process")    public void process(){//        do {//            String url = WANWANG + random + DOMAIN_SUFFIX;//            String result = HttpUtil.get(url);//            logger.info(result);////            String[] array = result.split("original");////            String status = array[1].substring(1, 4);////            if ("210".equals(status)){//                domainResult = "210";//                logger.info(random + DOMAIN_SUFFIX);//                System.out.println(random + DOMAIN_SUFFIX);//            }//            try {//                Thread.sleep(5000L);//            }//            catch (Throwable e){//                e.printStackTrace();//            }//        }//        while ("211".equals(domainResult));        while (true){            String domainResult = "211";            String random = StringUtil.randomString(DOMAIN_LENGTH);            //查找到直到缓存内不存在的域名            while (StringUtil.isNotBlank(RedisUtil.get(random))){                random = StringUtil.randomString(DOMAIN_LENGTH);            }            RedisUtil.set(random, random);            String url = WANWANG + random + DOMAIN_SUFFIX;            String result = HttpUtil.get(url);            logger.info(result);            String[] array = result.split("original");            String status = array[1].substring(1, 4);            if ("210".equals(status)){                logger.info(random + DOMAIN_SUFFIX);                System.out.println(random + DOMAIN_SUFFIX);            }            try {                Thread.sleep(3000L);            }            catch (Throwable e){                e.printStackTrace();            }        }    }    public static String extractMessageByRegular(String msg) {        List<String> list = new ArrayList<String>();        Pattern p = Pattern.compile("(\\[[^\\]]*\\])");        Matcher m = p.matcher(msg);        while (m.find()) {            String str = m.group();            list.add(str.substring(1, m.group().length() - 1));        }        return list.get(0);    }    @POST    @Path("test")    public void test(){        logger.info("aaa");    }}